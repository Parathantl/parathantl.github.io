{"version":3,"sources":["webpack://parathan/./src/components/tags.js","webpack://parathan/./src/templates/blog-post.js"],"names":["props","listOfTags","length","map","tag","index","Link","to","kebabCase","key","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","tags","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"mappings":"iMAwBA,EAnBa,SAAAA,GAEX,OAAKA,EAAMC,WAAWC,OAMpB,iCACU,IACLF,EAAMC,WAAWE,KAAI,SAACC,EAAKC,GAAN,OACpB,gBAAC,EAAAC,KAAD,CAAMC,GAAE,SAAWC,IAAUJ,GAArB,IAA8BK,IAAKJ,GACxCD,EAAM,WATR,M,8BC6DX,EA7DyB,SAAC,GAAwB,IAAD,EAArBM,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAOR,EAAKS,YAAYD,MAAQ,GAEtC,OACE,gBAAC,IAAD,CAAQT,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,2BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYf,EAAKS,YAAYJ,OAC1C,yBAAIL,EAAKS,YAAYO,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,gBAEX,gBAAC,EAAD,CAAM1B,WAAYmB,IAClB,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKI,UAAU,iBACb,sBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGnB,GACC,gBAAC,EAAAZ,KAAD,CAAMC,GAAIW,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACKtB,EAASG,YAAYJ,QAI9B,0BACGE,GACC,gBAAC,EAAAb,KAAD,CAAMC,GAAIY,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKE,YAAYJ,MADpB","file":"component---src-templates-blog-post-js-5ed6954bcbebf455d055.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport kebabCase from \"lodash/kebabCase\"\n\nconst Tags = props => {\n  // If the current post does not have any tags then stop rendering the component.\n  if (!props.listOfTags.length) {\n    return null\n  }\n\n  // Display a list of tags for the current blog post.\n  return (\n    <p>\n        Tags:{\" \"}\n        {props.listOfTags.map((tag, index) => (\n          <Link to={`/tags/${kebabCase(tag)}/`} key={index}>\n            {tag + \" | \"}\n          </Link>\n        ))}\n    </p>\n  )\n}\n\nexport default Tags","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Tags from \"../components/tags\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const tags = post.frontmatter.tags || []\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <Tags listOfTags={tags} />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`"],"sourceRoot":""}