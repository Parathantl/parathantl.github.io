{"version":3,"sources":["webpack://parathan/./src/components/bio.js","webpack://parathan/./src/templates/tags.js"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","linkedin","TagsTemplate","render","siteTitle","this","props","title","allMarkdownRemark","blogPosts","totalCount","currentTag","pageContext","tag","postsCounter","location","map","node","slug","fields","frontmatter","key","Link","to","React"],"mappings":"84BA6DA,IAlDY,WAAO,IAAD,IACVA,GAAOC,oBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,aAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,aAAA,EAAAA,EAAQc,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBZ,aAAA,EAAAA,EAAQa,UAAR,KAAhC,WAHF,IAKQ,IACN,qBAAGD,KAAI,6BAA6BZ,aAAA,EAAAA,EAAQc,WAAR,KAApC,gB,yGC7CJC,E,6FACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMxB,KAAKG,KAAKC,aAAaqB,MAD7C,EAE2BF,KAAKC,MAAMxB,KAAK0B,kBAA1CC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,WACbC,EAAaN,KAAKC,MAAMM,YAAYC,IACpCC,EAAkBJ,EAAN,SACD,IAAfA,EAAmB,GAAK,KADR,iBAEDC,EAFC,IAIlB,OACE,gBAAC,IAAD,CAAQI,SAAUV,KAAKC,MAAMS,SAAUR,MAAOH,GAC5C,gBAAC,IAAD,CAAKG,MAAOI,IACZ,gBAAC,IAAD,MACA,kCAAUA,GACV,yBAAIG,GAEJ,0BACGL,EAAUO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACRC,EAASD,EAAKE,OAAdD,KACAX,EAAUU,EAAKG,YAAfb,MACR,OACE,sBAAIc,IAAKH,GACP,gBAAC,EAAAI,KAAD,CAAMC,GAAIL,GAAOX,QAKzB,gBAAC,EAAAe,KAAD,CAAMC,GAAG,SAAT,mB,GA3BmBC,aAiC3B","file":"component---src-templates-tags-js-887d4bf771801237959c.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n            linkedin\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            Twitter\n          </a> {\" \"}\n          <a href={`https://linkedin.com/in/${social?.linkedin || ``}`}>\n            LinkedIn\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass TagsTemplate extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { blogPosts, totalCount } = this.props.data.allMarkdownRemark\n    const currentTag = this.props.pageContext.tag\n    const postsCounter = `${totalCount} post${\n      totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${currentTag}\"`\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={currentTag} />\n        <Bio />\n        <h1>Tag: {currentTag}</h1>\n        <p>{postsCounter}</p>\n\n        <ul>\n          {blogPosts.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        <Link to=\"/tags\">View all tags</Link>\n      </Layout>\n    )\n  }\n}\n\nexport default TagsTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      blogPosts: edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}